{"ast":null,"code":"var _jsxFileName = \"/Users/venkykumar/Desktop/stopwatch/src/Stopwatch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Stopwatch() {\n  _s();\n  const [isRunning, setIsRunning] = useState(false);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  useEffect(() => {\n    let intervalID;\n    if (isRunning) {\n      intervalID = setInterval(() => {\n        setElapsedTime(prevElapsedTime => prevElapsedTime + 1);\n      }, 1000);\n    } else {\n      clearInterval(intervalID);\n    }\n    return () => clearInterval(intervalID); // Cleanup the interval on unmount\n  }, [isRunning]);\n  const startStop = () => {\n    setIsRunning(prevIsRunning => !prevIsRunning);\n  };\n  const reset = () => {\n    setIsRunning(false);\n    setElapsedTime(0);\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return \"\".concat(minutes, \":\").concat(remainingSeconds < 10 ? \"0\" : \"\").concat(remainingSeconds);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stopwatch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time: \", formatTime(elapsedTime)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startStop,\n      children: isRunning ? \"Stop\" : \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: reset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Stopwatch, \"Rz4NAaLSI1e7oHsaomkHpnEvUbk=\");\n_c = Stopwatch;\nvar _c;\n$RefreshReg$(_c, \"Stopwatch\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Stopwatch","_s","isRunning","setIsRunning","elapsedTime","setElapsedTime","intervalID","setInterval","prevElapsedTime","clearInterval","startStop","prevIsRunning","reset","formatTime","seconds","minutes","Math","floor","remainingSeconds","concat","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/venkykumar/Desktop/stopwatch/src/Stopwatch.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport default function Stopwatch() {\n  const [isRunning, setIsRunning] = useState(false);\n  const [elapsedTime, setElapsedTime] = useState(0);\n\n  useEffect(() => {\n    let intervalID;\n\n    if (isRunning) {\n      intervalID = setInterval(() => {\n        setElapsedTime((prevElapsedTime) => prevElapsedTime + 1);\n      }, 1000);\n    } else {\n      clearInterval(intervalID);\n    }\n\n    return () => clearInterval(intervalID); // Cleanup the interval on unmount\n  }, [isRunning]);\n\n  const startStop = () => {\n    setIsRunning((prevIsRunning) => !prevIsRunning);\n  };\n\n  const reset = () => {\n    setIsRunning(false);\n    setElapsedTime(0);\n  };\n\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds < 10 ? \"0\" : \"\"}${remainingSeconds}`;\n  };\n\n  return (\n    <div>\n      <h1>Stopwatch</h1>\n      <p>Time: {formatTime(elapsedTime)}</p>\n      <button onClick={startStop}>{isRunning ? \"Stop\" : \"Start\"}</button>\n      <button onClick={reset}>Reset</button>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,IAAIS,UAAU;IAEd,IAAIJ,SAAS,EAAE;MACbI,UAAU,GAAGC,WAAW,CAAC,MAAM;QAC7BF,cAAc,CAAEG,eAAe,IAAKA,eAAe,GAAG,CAAC,CAAC;MAC1D,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACLC,aAAa,CAACH,UAAU,CAAC;IAC3B;IAEA,OAAO,MAAMG,aAAa,CAACH,UAAU,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,CAACJ,SAAS,CAAC,CAAC;EAEf,MAAMQ,SAAS,GAAGA,CAAA,KAAM;IACtBP,YAAY,CAAEQ,aAAa,IAAK,CAACA,aAAa,CAAC;EACjD,CAAC;EAED,MAAMC,KAAK,GAAGA,CAAA,KAAM;IAClBT,YAAY,CAAC,KAAK,CAAC;IACnBE,cAAc,CAAC,CAAC,CAAC;EACnB,CAAC;EAED,MAAMQ,UAAU,GAAIC,OAAO,IAAK;IAC9B,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,EAAE,CAAC;IACxC,MAAMI,gBAAgB,GAAGJ,OAAO,GAAG,EAAE;IACrC,UAAAK,MAAA,CAAUJ,OAAO,OAAAI,MAAA,CAAID,gBAAgB,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAAC,MAAA,CAAGD,gBAAgB;EAC1E,CAAC;EAED,oBACEnB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBzB,OAAA;MAAAqB,QAAA,GAAG,QAAM,EAACP,UAAU,CAACT,WAAW,CAAC;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCzB,OAAA;MAAQ0B,OAAO,EAAEf,SAAU;MAAAU,QAAA,EAAElB,SAAS,GAAG,MAAM,GAAG;IAAO;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eACnEzB,OAAA;MAAQ0B,OAAO,EAAEb,KAAM;MAAAQ,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV;AAACvB,EAAA,CAzCuBD,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}